% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/worker_analysis.R
\name{worker_analysis}
\alias{worker_analysis}
\title{Compute worker anomaly detection models for all workers within an app.}
\usage{
worker_analysis(
  app_workers_data,
  app_id = NA,
  start_date = NULL,
  period = "month",
  min_pre_periods,
  min_post_periods,
  min_workers = 30,
  sig_p = 0.05,
  save_model_data = TRUE,
  save_model = TRUE,
  use_cache = FALSE
)
}
\arguments{
\item{app_workers_data}{contains time-series data for each worker over the
same period of time. Requires the following columns:
\itemize{
\item date: the date by which activity was recorded.
\item worker_id: a unique identifier for the worker.
\item count: number of units of activity for the corresponding date/worker.
}}

\item{app_id}{unique identifier for the application}

\item{start_date}{date seperating the pre-period (matching) vs post-period
evaluating. Uses detect_changepoint if missing (NULL).}

\item{period}{unit of time to compare workers with.}

\item{min_pre_periods}{number of time units to qualify as an active worker in
pre-period.}

\item{min_post_periods}{number of time units to qualify as an active worker
in post-period.}

\item{min_workers}{minimum number of active workers to run the analysis.}

\item{sig_p}{p-value threshold to determine statistical significance.}

\item{save_model_data}{save_model_data whether to save analysis data.}

\item{save_model}{save_model whether to save user models.}

\item{use_cache}{use saved data and models from previous run.}
}
\value{
app_id string for compeleted app worker analysis
}
\description{
Compare each worker to a set of comparable workers in the pre-period and
evaluate deviation from average in the post-period to detect anomalous
behavior.
}
\examples{
set.seed(143)
num_dates <- 90
num_workers <- 30
# generate synthetic data
test_data <- setNames(
  merge(as.character(1:num_workers),
        seq(Sys.Date(), Sys.Date() + (num_dates - 1), by = 1),
        colnames = c("worker_id", "date")), c("worker_id", "date"))
start_date <- Sys.Date() + floor(num_dates / 2)
test_data$count <- sapply(1:(num_dates*num_workers),
                          function(x) { rpois(1, 50) })
# worker anomalies
test_data[test_data$worker_id == "1" &
            test_data$date > start_date, "count"] <- 100
test_data[test_data$worker_id == "2" &
            test_data$date > start_date, "count"] <- 1

output_dir <- worker_analysis(
  test_data, "test_analysis", start_date = start_date, period = "day",
  sig_p = 0.01)
paste("worker analysis output in directory:", output_dir)
}
